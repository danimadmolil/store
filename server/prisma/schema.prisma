// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model user {
  id                 Int               @id @default(autoincrement())
  name               String            @unique
  email              String            @unique
  password           String
  Order              Order[]
  Comments           CommentsOnProduc? @relation(fields: [commentsOnProducId], references: [id])
  refreshToken       String            @default("")
  commentsOnProducId Int               @default(-1)
  Comment            Comment[]
}

model CommentsOnProduc {
  id        Int     @id @default(autoincrement())
  comment   Comment @relation(fields: [commentId], references: [id])
  commentId Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  user      user[]
}

model Comment {
  id               Int                @id @default(autoincrement())
  comment          String
  user             user?              @relation(fields: [userId], references: [id])
  userId           Int?
  CommentsOnProduc CommentsOnProduc[]
  product          Product?           @relation(fields: [productId], references: [id])
  productId        Int                @default(-1)
}

model Product {
  id                 Int                  @id @default(autoincrement())
  image              String               @default("")
  name               String
  price              Float
  categories         CategoryOnProduct[]
  HotOffersOnProduct HotOffersOnProduct[]
  CommentsOnProduc   CommentsOnProduc[]
  Comment            Comment[]
}

model HotOffers {
  id                 Int                  @id @default(autoincrement())
  offPercent         String
  expiresOn          DateTime
  title              String
  HotOffersOnProduct HotOffersOnProduct[]
}

model HotOffersOnProduct {
  id          Int       @id @default(autoincrement())
  product     Product   @relation(fields: [productId], references: [id])
  productId   Int
  hotOffer    HotOffers @relation(fields: [hotOffersId], references: [id])
  hotOffersId Int
}

model Category {
  id                Int                 @id @default(autoincrement())
  title             String
  url               String              @default("#")
  parentCategory    Category?           @relation("parentSubCategory", fields: [parrentCategoryId], references: [id])
  subCategory       Category[]          @relation("parentSubCategory")
  parrentCategoryId Int?
  products          CategoryOnProduct[]
}

model CategoryOnProduct {
  id         Int       @id @default(autoincrement())
  Product    Product?  @relation(fields: [productId], references: [id])
  productId  Int?
  Category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?

  @@unique([productId, categoryId])
  @@index([productId, categoryId])
}

model Order {
  id     Int  @id @default(autoincrement())
  userId Int
  user   user @relation(fields: [userId], references: [id])
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}
